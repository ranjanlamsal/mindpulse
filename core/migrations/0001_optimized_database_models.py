# Generated by Django 5.2.5 on 2025-08-30 14:37

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('type', models.CharField(choices=[('jira', 'Jira'), ('chat', 'Chat'), ('meeting', 'Meeting'), ('discord', 'Discord')], db_index=True, max_length=50)),
                ('external_id', models.CharField(db_index=True, max_length=50)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
            ],
            options={
                'db_table_comment': 'Channel information with optimized indexing for analytics queries',
                'indexes': [models.Index(fields=['type', 'is_active'], name='core_channe_type_c7100f_idx'), models.Index(fields=['external_id', 'type'], name='core_channe_externa_39d584_idx'), models.Index(fields=['name', 'type'], name='core_channe_name_b12c27_idx'), models.Index(fields=['is_active', 'created_at'], name='core_channe_is_acti_3317e7_idx')],
                'unique_together': {('type', 'external_id')},
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_hash', models.UUIDField(db_index=True)),
                ('message', models.TextField()),
                ('external_ref', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('message_length', models.PositiveIntegerField(db_index=True, default=0)),
                ('processing_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], db_index=True, default='pending', max_length=20)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='core.channel')),
            ],
            options={
                'db_table_comment': 'Messages with optimized indexing for wellbeing analytics',
            },
        ),
        migrations.CreateModel(
            name='MessageAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sentiment', models.CharField(choices=[('positive', 'Positive'), ('negative', 'Negative'), ('neutral', 'Neutral')], db_index=True, max_length=20)),
                ('sentiment_score', models.FloatField(db_index=True)),
                ('emotion', models.CharField(choices=[('sadness', 'Sadness'), ('joy', 'Joy'), ('love', 'Love'), ('anger', 'Anger'), ('fear', 'Fear'), ('surprise', 'Surprise'), ('unknown', 'Unknown')], db_index=True, max_length=50)),
                ('emotion_score', models.FloatField(db_index=True)),
                ('stress', models.BooleanField(db_index=True, default=False)),
                ('stress_score', models.FloatField(db_index=True)),
                ('sentiment_confidence', models.FloatField(default=0.0)),
                ('emotion_confidence', models.FloatField(default=0.0)),
                ('stress_confidence', models.FloatField(default=0.0)),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='core.message')),
            ],
            options={
                'db_table_comment': 'Message analysis results with optimized indexing for aggregations',
            },
        ),
        migrations.CreateModel(
            name='WellbeingAggregate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_hash', models.UUIDField(blank=True, db_index=True, null=True)),
                ('source', models.CharField(blank=True, choices=[('overall', 'Overall'), ('discord', 'Discord'), ('jira', 'Jira'), ('chat', 'Chat'), ('meeting', 'Meeting')], db_index=True, max_length=50, null=True)),
                ('period_start', models.DateTimeField(db_index=True)),
                ('period_end', models.DateTimeField(db_index=True)),
                ('period_type', models.CharField(choices=[('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], db_index=True, default='daily', max_length=20)),
                ('sentiment_weighted_avg', models.DecimalField(db_index=True, decimal_places=4, default=0.0, max_digits=7)),
                ('stress_weighted_avg', models.DecimalField(db_index=True, decimal_places=4, default=0.0, max_digits=7)),
                ('emotion_sadness_avg', models.DecimalField(decimal_places=4, default=0.0, max_digits=7)),
                ('emotion_joy_avg', models.DecimalField(db_index=True, decimal_places=4, default=0.0, max_digits=7)),
                ('emotion_love_avg', models.DecimalField(decimal_places=4, default=0.0, max_digits=7)),
                ('emotion_anger_avg', models.DecimalField(db_index=True, decimal_places=4, default=0.0, max_digits=7)),
                ('emotion_fear_avg', models.DecimalField(decimal_places=4, default=0.0, max_digits=7)),
                ('emotion_surprise_avg', models.DecimalField(decimal_places=4, default=0.0, max_digits=7)),
                ('message_count', models.PositiveIntegerField(db_index=True, default=0)),
                ('active_users', models.PositiveIntegerField(db_index=True, default=0)),
                ('wellbeing_score', models.DecimalField(db_index=True, decimal_places=2, default=5.0, max_digits=4)),
                ('data_quality', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], db_index=True, default='medium', max_length=20)),
            ],
            options={
                'db_table_comment': 'Wellbeing aggregates with comprehensive indexing for analytics dashboard',
                'indexes': [models.Index(fields=['user_hash', 'period_start', 'period_type'], name='core_wellbe_user_ha_00afee_idx'), models.Index(fields=['source', 'period_start', 'period_type'], name='core_wellbe_source_ce1162_idx'), models.Index(fields=['period_start', 'period_type', 'source'], name='core_wellbe_period__75fe19_idx'), models.Index(fields=['user_hash', 'source', 'period_start'], name='core_wellbe_user_ha_2e00a9_idx'), models.Index(fields=['-user_hash', 'period_start'], name='core_wellbe_user_ha_c127f5_idx'), models.Index(fields=['wellbeing_score', 'period_start'], name='core_wellbe_wellbei_d10715_idx'), models.Index(fields=['sentiment_weighted_avg', 'period_start'], name='core_wellbe_sentime_a9b60b_idx'), models.Index(fields=['stress_weighted_avg', 'period_start'], name='core_wellbe_stress__064d53_idx'), models.Index(fields=['wellbeing_score', 'source', 'period_start'], name='core_wellbe_wellbei_63f37a_idx'), models.Index(fields=['stress_weighted_avg', 'user_hash'], name='core_wellbe_stress__969e7e_idx'), models.Index(fields=['data_quality', 'period_start'], name='core_wellbe_data_qu_0f0fe6_idx'), models.Index(fields=['message_count', 'period_start'], name='core_wellbe_message_cd1315_idx')],
                'unique_together': {('user_hash', 'source', 'period_start', 'period_type')},
            },
        ),
        migrations.CreateModel(
            name='WellbeingIndex',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_hash', models.UUIDField(db_index=True)),
                ('sentiment_avg', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('stress_avg', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('emotion_avg', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.channel')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=150, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('role', models.CharField(choices=[('employee', 'Employee'), ('manager', 'Manager'), ('admin', 'Admin')], db_index=True, default='employee', max_length=20)),
                ('hashed_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('is_staff', models.BooleanField(db_index=True, default=False)),
                ('last_login_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('message_count', models.PositiveIntegerField(default=0)),
                ('last_activity', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table_comment': 'Users with optimized indexing for wellbeing analytics',
                'indexes': [models.Index(fields=['email'], name='core_user_email_38052c_idx'), models.Index(fields=['hashed_id'], name='core_user_hashed__71dcc2_idx'), models.Index(fields=['role', 'is_active'], name='core_user_role_f6ec93_idx'), models.Index(fields=['is_active', 'created_at'], name='core_user_is_acti_fc453c_idx'), models.Index(fields=['last_activity', 'role'], name='core_user_last_ac_e058f5_idx'), models.Index(fields=['created_at', 'role'], name='core_user_created_38681e_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['user_hash', 'created_at'], name='core_messag_user_ha_29436e_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['channel', 'user_hash', 'created_at'], name='core_messag_channel_2b9a30_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['channel', 'created_at'], name='core_messag_channel_1dc31a_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['processing_status', 'created_at'], name='core_messag_process_920175_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['user_hash', 'channel'], name='core_messag_user_ha_6dd39e_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['created_at', 'processing_status'], name='core_messag_created_f755f6_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['message_length', 'created_at'], name='core_messag_message_90b2c9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='message',
            unique_together={('channel', 'external_ref')},
        ),
        migrations.AddIndex(
            model_name='messageanalysis',
            index=models.Index(fields=['sentiment', 'created_at'], name='core_messag_sentime_8bb4d7_idx'),
        ),
        migrations.AddIndex(
            model_name='messageanalysis',
            index=models.Index(fields=['emotion', 'created_at'], name='core_messag_emotion_9cc2a5_idx'),
        ),
        migrations.AddIndex(
            model_name='messageanalysis',
            index=models.Index(fields=['stress', 'created_at'], name='core_messag_stress_c6c9cb_idx'),
        ),
        migrations.AddIndex(
            model_name='messageanalysis',
            index=models.Index(fields=['sentiment_score', 'created_at'], name='core_messag_sentime_2730e1_idx'),
        ),
        migrations.AddIndex(
            model_name='messageanalysis',
            index=models.Index(fields=['emotion_score', 'created_at'], name='core_messag_emotion_98a866_idx'),
        ),
        migrations.AddIndex(
            model_name='messageanalysis',
            index=models.Index(fields=['stress_score', 'created_at'], name='core_messag_stress__c1b9a2_idx'),
        ),
        migrations.AddIndex(
            model_name='messageanalysis',
            index=models.Index(fields=['sentiment', 'emotion', 'created_at'], name='core_messag_sentime_1f79c7_idx'),
        ),
        migrations.AddIndex(
            model_name='messageanalysis',
            index=models.Index(fields=['stress', 'sentiment', 'created_at'], name='core_messag_stress_c7ed2c_idx'),
        ),
        migrations.AddIndex(
            model_name='messageanalysis',
            index=models.Index(fields=['message', 'created_at'], name='core_messag_message_9f425f_idx'),
        ),
        migrations.AddIndex(
            model_name='wellbeingindex',
            index=models.Index(fields=['user_hash', 'source', 'period_start'], name='core_wellbe_user_ha_edcc1b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='wellbeingindex',
            unique_together={('user_hash', 'source', 'period_start')},
        ),
    ]
